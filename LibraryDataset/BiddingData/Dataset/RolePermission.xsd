<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Role" targetNamespace="http://tempuri.org/Role.xsd" xmlns:mstns="http://tempuri.org/Role.xsd" xmlns="http://tempuri.org/Role.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="SalesManagerDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SalesManagerDBConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.LibraryDataset.My.MySettings.GlobalReference.Default.SalesManagerDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleTableAdapter" GeneratorDataComponentClassName="RoleTableAdapter" Name="Role" UserDataComponentName="RoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Role] WHERE (([Id] = @Original_Id) AND ([RoleName] = @Original_RoleName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Role] ([RoleName]) VALUES (@RoleName);
SELECT Id, RoleName FROM Role WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, RoleName
FROM   Role
WHERE (IsDelete = 'False')</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Role] SET [RoleName] = @RoleName WHERE (([Id] = @Original_Id) AND ([RoleName] = @Original_RoleName));
SELECT Id, RoleName FROM Role WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="RoleName" DataSetColumn="RoleName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteRole" Modifier="Public" Name="DeleteRole" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteRole">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE Role
SET       DeleteDate = @DeleteDate, DeleteBy = @DeleteBy, IsDelete = 'True'
WHERE (Id = @Id); 
SELECT Id, RoleName FROM Role WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="DeleteDate" ColumnName="DeleteDate" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@DeleteDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="DeleteDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="DeleteBy" ColumnName="DeleteBy" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@DeleteBy" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="DeleteBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertRole" Modifier="Public" Name="InsertRole" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertRole">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Role
             (RoleName, CreateDate, CreateBy, IsDelete)
VALUES (@RoleName,@CreateDate,@CreateBy, 'False');  
SELECT Id, RoleName FROM Role WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleName" ColumnName="RoleName" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CreateDate" ColumnName="CreateDate" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CreateBy" ColumnName="CreateBy" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@CreateBy" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="CreateBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdateRole" Modifier="Public" Name="UpdateRole" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="UpdateRole">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE Role
SET       RoleName = @RoleName, UpdateDate = @UpdateDate, UpdateBy = @UpdateBy
WHERE (Id = @Id); 
SELECT Id, RoleName FROM Role WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleName" ColumnName="RoleName" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="nvarchar(25)" DbType="String" Direction="Input" ParameterName="@RoleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="25" SourceColumn="RoleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="UpdateDate" ColumnName="UpdateDate" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@UpdateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="UpdateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="UpdateBy" ColumnName="UpdateBy" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@UpdateBy" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="UpdateBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RolePermissionTableAdapter" GeneratorDataComponentClassName="RolePermissionTableAdapter" Name="RolePermission" UserDataComponentName="RolePermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.RolePermission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RolePermission] WHERE (([RoleId] = @Original_RoleId) AND ([PermissionId] = @Original_PermissionId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RolePermission] ([RoleId], [PermissionId]) VALUES (@RoleId, @PermissionId);
SELECT RoleId, PermissionId FROM RolePermission WHERE (PermissionId = @PermissionId) AND (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT RoleId, PermissionId FROM dbo.RolePermission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RolePermission] SET [RoleId] = @RoleId, [PermissionId] = @PermissionId WHERE (([RoleId] = @Original_RoleId) AND ([PermissionId] = @Original_PermissionId));
SELECT RoleId, PermissionId FROM RolePermission WHERE (PermissionId = @PermissionId) AND (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="PermissionId" DataSetColumn="PermissionId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeleteRolePermissionByRole" Modifier="Public" Name="DeleteRolePermissionByRole" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="DeleteRolePermissionByRole">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM RolePermission
WHERE (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="SalesManagerDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="InsertRolePermission" Modifier="Public" Name="InsertRolePermission" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="InsertRolePermission">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO RolePermission
             (RoleId, PermissionId)
VALUES (@RoleId,@PermissionId); 
SELECT RoleId, PermissionId FROM RolePermission WHERE (PermissionId = @PermissionId) AND (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="SalesManagerDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PermissionId" ColumnName="PermissionId" DataSourceName="SalesManagerDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PermissionId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PermissionId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PermissionTableAdapter" GeneratorDataComponentClassName="PermissionTableAdapter" Name="Permission" UserDataComponentName="PermissionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Permission] WHERE (([Id] = @Original_Id) AND ([PermissionName] = @Original_PermissionName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Permission] ([PermissionName]) VALUES (@PermissionName);
SELECT Id, PermissionName FROM Permission WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id, PermissionName
FROM   Permission</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Permission] SET [PermissionName] = @PermissionName WHERE (([Id] = @Original_Id) AND ([PermissionName] = @Original_PermissionName));
SELECT Id, PermissionName FROM Permission WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_PermissionName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="PermissionName" DataSetColumn="PermissionName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Permission" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="CheckPermissionExists" Modifier="Public" Name="CheckPermissionExists" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="CheckPermissionExists">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Id
FROM   Permission
WHERE (PermissionName = @PermissionName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PermissionName" ColumnName="PermissionName" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="nvarchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="300" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="DeletePermission" Modifier="Public" Name="DeletePermission" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="DeletePermission">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Permission
WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetPermissionsByRoleId" GeneratorSourceName="FillBy" GetMethodModifier="Public" GetMethodName="GetPermissionsByRoleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetPermissionsByRoleId" UserSourceName="FillBy">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Permission.Id, Permission.PermissionName
FROM   Permission INNER JOIN
             RolePermission ON Permission.Id = RolePermission.PermissionId
WHERE (RolePermission.RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="SalesManagerDB.dbo.RolePermission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Permission" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBy1" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetPermissionOfUser" GeneratorSourceName="FillBy1" GetMethodModifier="Public" GetMethodName="GetPermissionOfUser" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetPermissionOfUser" UserSourceName="FillBy1">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT Permission.Id, Permission.PermissionName
FROM   Permission INNER JOIN
             RolePermission ON Permission.Id = RolePermission.PermissionId INNER JOIN
             Person ON RolePermission.RoleId = Person.RoleId
WHERE (Person.Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Username" ColumnName="Username" DataSourceName="SalesManagerDB.dbo.Person" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="SalesManagerDB.dbo.Permission" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="InsertPermission" Modifier="Public" Name="InsertPermission" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="InsertPermission">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO Permission
             (PermissionName, CreateDate, CreateBy, IsDelete)
OUTPUT Inserted.Id
VALUES (@PermissionName,@CreateDate,@CreateBy, 'False');  </CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PermissionName" ColumnName="PermissionName" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="nvarchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="300" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CreateDate" ColumnName="CreateDate" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@CreateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="CreateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="CreateBy" ColumnName="CreateBy" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@CreateBy" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="CreateBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="SalesManagerDBConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="UpdatePermission" Modifier="Public" Name="UpdatePermission" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="UpdatePermission">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE Permission
SET       PermissionName = @PermissionName, UpdateDate = @UpdateDate, UpdateBy = @UpdateBy
WHERE (Id = @Id);  
SELECT Id, PermissionName FROM Permission WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="PermissionName" ColumnName="PermissionName" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="nvarchar(25)" DbType="AnsiString" Direction="Input" ParameterName="@PermissionName" Precision="0" ProviderType="VarChar" Scale="0" Size="300" SourceColumn="PermissionName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="UpdateDate" ColumnName="UpdateDate" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@UpdateDate" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="UpdateDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="UpdateBy" ColumnName="UpdateBy" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="varchar(40)" DbType="AnsiString" Direction="Input" ParameterName="@UpdateBy" Precision="0" ProviderType="VarChar" Scale="0" Size="40" SourceColumn="UpdateBy" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="SalesManagerDB.dbo.Permission" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Role" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="Role" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="Role">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Role" msprop:Generator_RowEvHandlerName="RoleRowChangeEventHandler" msprop:Generator_RowDeletedName="RoleRowDeleted" msprop:Generator_RowDeletingName="RoleRowDeleting" msprop:Generator_RowEvArgName="RoleRowChangeEvent" msprop:Generator_TablePropName="_Role" msprop:Generator_RowChangedName="RoleRowChanged" msprop:Generator_UserTableName="Role" msprop:Generator_RowChangingName="RoleRowChanging" msprop:Generator_RowClassName="RoleRow" msprop:Generator_TableClassName="RoleDataTable" msprop:Generator_TableVarName="tableRole">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_UserColumnName="Id" msprop:Generator_ColumnVarNameInTable="columnId" type="xs:int" />
              <xs:element name="RoleName" msprop:Generator_ColumnPropNameInTable="RoleNameColumn" msprop:Generator_ColumnPropNameInRow="RoleName" msprop:Generator_UserColumnName="RoleName" msprop:Generator_ColumnVarNameInTable="columnRoleName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RolePermission" msprop:Generator_RowEvHandlerName="RolePermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="RolePermissionRowDeleted" msprop:Generator_RowDeletingName="RolePermissionRowDeleting" msprop:Generator_RowEvArgName="RolePermissionRowChangeEvent" msprop:Generator_TablePropName="RolePermission" msprop:Generator_RowChangedName="RolePermissionRowChanged" msprop:Generator_UserTableName="RolePermission" msprop:Generator_RowChangingName="RolePermissionRowChanging" msprop:Generator_RowClassName="RolePermissionRow" msprop:Generator_TableClassName="RolePermissionDataTable" msprop:Generator_TableVarName="tableRolePermission">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" type="xs:int" />
              <xs:element name="PermissionId" msprop:Generator_ColumnPropNameInTable="PermissionIdColumn" msprop:Generator_ColumnPropNameInRow="PermissionId" msprop:Generator_UserColumnName="PermissionId" msprop:Generator_ColumnVarNameInTable="columnPermissionId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Permission" msprop:Generator_RowEvHandlerName="PermissionRowChangeEventHandler" msprop:Generator_RowDeletedName="PermissionRowDeleted" msprop:Generator_RowDeletingName="PermissionRowDeleting" msprop:Generator_RowEvArgName="PermissionRowChangeEvent" msprop:Generator_TablePropName="Permission" msprop:Generator_RowChangedName="PermissionRowChanged" msprop:Generator_UserTableName="Permission" msprop:Generator_RowChangingName="PermissionRowChanging" msprop:Generator_RowClassName="PermissionRow" msprop:Generator_TableClassName="PermissionDataTable" msprop:Generator_TableVarName="tablePermission">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_UserColumnName="Id" msprop:Generator_ColumnVarNameInTable="columnId" type="xs:int" />
              <xs:element name="PermissionName" msprop:Generator_ColumnPropNameInTable="PermissionNameColumn" msprop:Generator_ColumnPropNameInRow="PermissionName" msprop:Generator_UserColumnName="PermissionName" msprop:Generator_ColumnVarNameInTable="columnPermissionName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="300" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Role" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="RolePermission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RolePermission" />
      <xs:field xpath="mstns:RoleId" />
      <xs:field xpath="mstns:PermissionId" />
    </xs:unique>
    <xs:unique name="Permission_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Permission" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>